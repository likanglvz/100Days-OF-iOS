#import <Foundation/Foundation.h>
@interface CharObj : NSObject
@property (nonatomic,assign)unichar c;
@property (nonatomic,assign)int num;
-(id)initWithChar:(unichar)c andNum:(int)num;
@end

@implementation CharObj
-(id)initWithChar:(unichar)c andNum:(int)num
{
    if (self = [self init]) {
        _c = c;
        _num = num;
    }
    return self;
}
@end］

2。产生一字符串分类，用于查找其中出现次数最多的字符
@interface NSString (findMax)
-(int)findChar;
@end

@implementation NSString (findMax)
/*私有方法，用于查找某个字符是否存在于数组中*/
-(BOOL)find:(CharObj *__strong *)arr andSum:(int)sum andChar:(unichar)tmp
{
    for (int i = 0; i<sum; i++) {
        NSLog(@"c=%C",tmp);
        if (arr[i].c == tmp) {
            arr[i].num++;
            NSLog(@"ssss");
            return YES;
        }
    }
    return NO;
};
/*私有方法，用于查找出现次数最多的字符*/
-(CharObj *)find:(CharObj *__strong *)arr andSum:(int)sum
{
    CharObj *max = arr[0];
    for (int i = 0; i<sum; i++) {
        if (arr[i].num>max.num) {
            max = arr[i];
        }
    }
    return max;
};

-(int)findChar
{
    long len = [self length];
    int sum = 0;
    CharObj *arr[len];
    unichar tmp;
    
    for (int i = 0; i<len; i++) {
        tmp = [self characterAtIndex:i];
        if (![self find:arr andSum:sum andChar:tmp]) {
            arr[sum]=[[CharObj alloc]initWithChar:tmp andNum:1];
            sum++;
        }
    }
   CharObj *obj = [self find:arr andSum:sum];
    NSLog(@"出现次数最多的字符为：%C,次数为%d,sum=%d",obj.c,obj.num,sum);
    return 0;
}
@end

3. main.m
#import <Foundation/Foundation.h>
#include <sys/stat.h>
/*把文件中内容重新组多行用','号连接成一行*/
unsigned long getSize1(const char *path)
{
    unsigned long filesize = -1;
    /*定义一个结构体变量*/
    struct stat buff;
    /*调用函数stat,同时把buff作为出参传入*/
    if(!(stat(path, &buff) < 0)){
        filesize = buff.st_size;
    }
    return filesize;
}

unsigned long getSize2(const char *path)
{
    unsigned long filesize = -1;
    FILE *fp;
    fp = fopen(path, "r");
    if(fp == NULL)
        return filesize;
    //把fp指针退回到离文件结尾0字节处
    /*第三个参数可以是下面三种
     SEEK_SET： 文件开头
 　　 SEEK_CUR： 当前位置
 　　 SEEK_END： 文件结尾
     第二个参数为负，则偏移到第三个参数的右边多少个字节，为正则是移到其左边多少字节
     */
    fseek(fp, 0L, SEEK_END);
    /*用于得到文件位置指针当前位置相对于文件首的偏移字节数*/
    filesize = ftell(fp);
    fclose(fp);
    return filesize;
}
#import "NSString+findMax.h"
int main(int argc, const char * argv[])
{
    
    FILE *fr = fopen("/Users/apple/Desktop/2.txt","r");
    long len = getSize2("/Users/apple/Desktop/2.txt");
    
    char str[len+1];
    fread(str,len,1,fr);
    str[len] = '\0';
    
    NSString *src = [NSString stringWithUTF8String:str];
    NSLog(@"%@",src);
    [src findChar];
}
